{"ast":null,"code":"import _objectSpread from\"/home/boring/webdev/jsprojects/react/travelapp/amadeus-airport-city-search-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TablePagination from\"@material-ui/core/TablePagination\";import TableRow from\"@material-ui/core/TableRow\";import Paper from\"@material-ui/core/Paper\";import LinearProgress from'@material-ui/core/LinearProgress';var useStyles=makeStyles({root:{width:\"100%\",overflowX:\"auto\"},table:{minWidth:650}});var SearchTable=function SearchTable(props){var _props$dataSource=props.dataSource,data=_props$dataSource.data,meta=_props$dataSource.meta;var classes=useStyles();return React.createElement(Paper,{className:classes.root,style:{position:\"relative\"}},props.loading&&React.createElement(LinearProgress,{variant:\"indeterminate\",className:\"linear-progress\"}),React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,null,\"Name\"),React.createElement(TableCell,{align:\"right\"},\"Type\"),React.createElement(TableCell,{align:\"right\"},\"City\"),React.createElement(TableCell,{align:\"right\"},\"Country\"),React.createElement(TableCell,{align:\"right\"},\"Country code\"))),React.createElement(TableBody,null,!!data.length&&data.map(function(row,idx){return React.createElement(TableRow,{key:row.name+idx},React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.name),React.createElement(TableCell,{align:\"right\"},row.subType),React.createElement(TableCell,{align:\"right\"},row.address.cityName),React.createElement(TableCell,{align:\"right\"},row.address.countryName),React.createElement(TableCell,{align:\"right\"},row.address.countryCode));}))),!data.length&&React.createElement(\"div\",{className:\"center\"},\"No data\"),React.createElement(TablePagination,{rowsPerPageOptions:[],component:\"div\",count:meta.count?meta.count:0,rowsPerPage:10,page:props.search.page,onChangePage:function onChangePage(e,page){props.setSearch(function(p){return _objectSpread({},p,{page:page});});}}));};export default SearchTable;","map":{"version":3,"sources":["/home/boring/webdev/jsprojects/react/travelapp/amadeus-airport-city-search-mern/client/src/components/search-table.jsx"],"names":["React","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Paper","LinearProgress","useStyles","root","width","overflowX","table","minWidth","SearchTable","props","dataSource","data","meta","classes","position","loading","length","map","row","idx","name","subType","address","cityName","countryName","countryCode","count","search","page","e","setSearch","p"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  }\n});\n\nconst SearchTable = props => {\n  const { data, meta } = props.dataSource;\n  const classes = useStyles();\n\n  return (\n\n    <Paper className={classes.root} style={{ position: \"relative\" }}>\n\n      {/* Loader for improving UX */}\n      {props.loading && <LinearProgress variant=\"indeterminate\" className=\"linear-progress\" />}\n\n      <Table className={classes.table} aria-label=\"simple table\">\n\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Type</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">Country</TableCell>\n            <TableCell align=\"right\">Country code</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody >\n          {!!data.length &&\n            data.map((row, idx) => (\n              <TableRow key={row.name + idx}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.subType}</TableCell>\n                <TableCell align=\"right\">{row.address.cityName}</TableCell>\n                <TableCell align=\"right\">{row.address.countryName}</TableCell>\n                <TableCell align=\"right\">{row.address.countryCode}</TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n\n      </Table>\n\n      {/* Will display this if no data in rtesponse from server */}\n      {!data.length && <div className=\"center\">No data</div>}\n\n      {/* Pagination Component */}\n      <TablePagination\n        rowsPerPageOptions={[]}\n        component=\"div\"\n        count={meta.count ? meta.count : 0}\n        rowsPerPage={10}\n        page={props.search.page}\n        onChangePage={(e, page) => {\n          props.setSearch(p => ({ ...p, page }));\n        }}\n      />\n    </Paper>\n  );\n};\n\nexport default SearchTable;\n"]},"metadata":{},"sourceType":"module"}