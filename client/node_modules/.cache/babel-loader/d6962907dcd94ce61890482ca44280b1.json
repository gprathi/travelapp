{"ast":null,"code":"import _objectSpread from\"/home/boring/webdev/jsprojects/react/travelapp/amadeus-airport-city-search-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/boring/webdev/jsprojects/react/travelapp/amadeus-airport-city-search-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect}from\"react\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import TextField from\"@material-ui/core/TextField\";import CircularProgress from\"@material-ui/core/CircularProgress\";import axios from'axios';import{getAmadeusData}from\"../api/amadeus.api\";import{debounce}from\"lodash\";var SearchAutocomplete=function SearchAutocomplete(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),options=_React$useState4[0],setOptions=_React$useState4[1];var _React$useState5=React.useState(''),_React$useState6=_slicedToArray(_React$useState5,2),search=_React$useState6[0],setSearch=_React$useState6[1];var _React$useState7=React.useState(''),_React$useState8=_slicedToArray(_React$useState7,2),keyword=_React$useState8[0],setKeyword=_React$useState8[1];var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),loading=_React$useState10[0],setLoading=_React$useState10[1];// Configure options format for proper displaying on the UI\nvar names=options.map(function(i){return{type:i.subType,name:i.name};});// Debounce func prevents extra unwanted keystrokes, when user triggers input events \nvar debounceLoadData=useCallback(debounce(setKeyword,1000),[]);useEffect(function(){debounceLoadData(search);},[search]);// Same example as in *SearchRoot* component\nReact.useEffect(function(){setLoading(true);var _getAmadeusData=getAmadeusData(_objectSpread({},props.search,{page:0,keyword:keyword})),out=_getAmadeusData.out,source=_getAmadeusData.source;out.then(function(res){if(!res.data.code){setOptions(res.data.data);}setLoading(false);}).catch(function(err){axios.isCancel(err);setOptions([]);setLoading(false);});return function(){source.cancel();};},[keyword]);// Desctructuring our props\nvar _props$search=props.search,city=_props$search.city,airport=_props$search.airport;var label=city&&airport?\"City and Airports\":city?\"City\":airport?\"Airports\":\"\";return(// This is Material-UI component that also has it's own props\nReact.createElement(React.Fragment,null,React.createElement(Autocomplete,{id:\"asynchronous-demo\",style:{width:300,marginBottom:\"1rem\"},open:open,onOpen:function onOpen(){setOpen(true);},onClose:function onClose(){setOpen(false);},getOptionSelected:function getOptionSelected(option,value){return option.name===value.name&&option.type===value.type;},onChange:function onChange(e,value){if(value&&value.name){props.setSearch(function(p){return _objectSpread({},p,{keyword:value.name,page:0});});setSearch(value.name);return;}setSearch(\"\");props.setSearch(function(p){return _objectSpread({},p,{keyword:\"a\",page:0});});},getOptionLabel:function getOptionLabel(option){return option.name;},options:names,loading:loading,renderInput:function renderInput(params){return React.createElement(TextField,{label:label,fullWidth:true,onChange:function onChange(e){e.preventDefault();setSearch(e.target.value);},variant:\"outlined\",inputProps:_objectSpread({},params.inputProps,{value:search}),InputProps:_objectSpread({},params.InputProps,{endAdornment:React.createElement(React.Fragment,null,loading?React.createElement(CircularProgress,{color:\"inherit\",size:20}):null,params.InputProps.endAdornment)})});}})));};export default SearchAutocomplete;","map":{"version":3,"sources":["/home/boring/webdev/jsprojects/react/travelapp/amadeus-airport-city-search-mern/client/src/components/search-autocomplete.jsx"],"names":["React","useCallback","useEffect","Autocomplete","TextField","CircularProgress","axios","getAmadeusData","debounce","SearchAutocomplete","props","useState","open","setOpen","options","setOptions","search","setSearch","keyword","setKeyword","loading","setLoading","names","map","i","type","subType","name","debounceLoadData","page","out","source","then","res","data","code","catch","err","isCancel","cancel","city","airport","label","width","marginBottom","option","value","e","p","params","preventDefault","target","inputProps","InputProps","endAdornment"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport axios from 'axios'\nimport { getAmadeusData } from \"../api/amadeus.api\";\nimport { debounce } from \"lodash\"\n\nconst SearchAutocomplete = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const [search, setSearch] = React.useState('')\n  const [keyword, setKeyword] = React.useState('')\n  const [loading, setLoading] = React.useState(false)\n\n  // Configure options format for proper displaying on the UI\n  const names = options.map(i => ({ type: i.subType, name: i.name }));\n\n  // Debounce func prevents extra unwanted keystrokes, when user triggers input events \n  const debounceLoadData = useCallback(debounce(setKeyword, 1000), []);\n\n  useEffect(() => {\n    debounceLoadData(search);\n  }, [search]);\n\n  // Same example as in *SearchRoot* component\n  React.useEffect(() => {\n\n    setLoading(true)\n    const { out, source } = getAmadeusData({ ...props.search, page: 0, keyword });\n\n    out.then(res => {\n      if (!res.data.code) {\n        setOptions(res.data.data);\n      }\n      setLoading(false)\n    }).catch(err => {\n      axios.isCancel(err);\n      setOptions([]);\n      setLoading(false)\n\n    });\n\n    return () => {\n      source.cancel()\n    };\n  }, [keyword]);\n\n  // Desctructuring our props\n  const { city, airport } = props.search\n\n  const label = city && airport ? \"City and Airports\" : city ? \"City\" : airport ? \"Airports\" : \"\"\n\n  return (\n    // This is Material-UI component that also has it's own props\n    <>\n      <Autocomplete\n        id=\"asynchronous-demo\"\n        style={{ width: 300, marginBottom: \"1rem\" }}\n        open={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        getOptionSelected={(option, value) =>\n          option.name === value.name && option.type === value.type\n        }\n        onChange={(e, value) => {\n          if (value && value.name) {\n            props.setSearch((p) => ({ ...p, keyword: value.name, page: 0 }))\n            setSearch(value.name)\n            return;\n          }\n          setSearch(\"\")\n          props.setSearch((p) => ({ ...p, keyword: \"a\", page: 0 }))\n\n        }}\n        getOptionLabel={option => {\n          return option.name;\n        }}\n        options={names}\n        loading={loading}\n        renderInput={params => {\n          return (\n            <TextField\n              label={label}\n              fullWidth\n              onChange={e => {\n                e.preventDefault();\n                setSearch(e.target.value);\n              }}\n              variant=\"outlined\"\n              inputProps={{\n                ...params.inputProps,\n                value: search\n              }}\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {loading ? (\n                      <CircularProgress color=\"inherit\" size={20} />\n                    ) : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                )\n              }}\n            />\n          );\n        }}\n      />\n    </>\n  )\n};\n\nexport default SearchAutocomplete;\n"]},"metadata":{},"sourceType":"module"}